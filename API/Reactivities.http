# Reactivities
@url = https://localhost:5001

###
# group: Module 2
# @name Get Weather Forecast
GET {{url}}/weatherforecast

###
# group: Module 2
# @name Get Activities
GET {{url}}/api/activities

###
# group: Module 2
# @name Get Activity
GET {{url}}/api/activities/4956638d-a71d-467a-8277-75fca772958f

###
# group: Module 4
# @name Get Activities
GET {{url}}/api/activities

###
# group: Module 4
# @name Get Activity
GET {{url}}/api/activities/22e1d4e9-76ca-4184-9340-dbaad0d14269

###
# group: Module 4
# @name Create Activity
//< {%
     //TODO: migrate to HTTP Client Pre-request handler API
     //var moment = require("moment");
    
     //
    
     //pm.environment.set('activityDate', moment().add(100, 'days').toISOString());
//%}

POST {{url}}/api/activities
Content-Type: application/json

{
	"title": "{{$random.company.catchPhrase}}",
	"description": "{{$random.lorem.sentence}}",
	"category": "music",
	"date": "{{$isoTimestamp}}",
	"city": "{{$random.address.cityName}}",
	"venue": "{{$random.address.fullAddress}}",
    "latitude": 51.496510900000004,
    "longitude": -0.17600190725447445
}


###
# group: Module 4
# @name Edit Activity
//< {%
    //TODO: migrate to HTTP Client Pre-request handler API
//     var moment = require("moment");
   
     
    
//     pm.environment.set('activityDate', moment().add(14, 'days').toISOString());
#%}
PUT {{url}}/api/activities
Content-Type: application/json

{
  "id": "d26b53f5-f66f-4f2c-bfe6-78f28eb78bb2",
  "title": "Test activity updated again",
  "date": "2025-04-03T03:10:54.11",
  "description": "Libero sunt cumque est ",
  "category": "music",
  "isCancelled": false,
  "city": "Brayanbury",
  "venue": "Sylvan Fall",
  "latitude": 51.496510900000004,
  "longitude": -0.17600190725447445
}

###
# group: Module 4
# @name Delete Activity
//< {%
    // TODO: you can add here Pre-request handler
//%}
DELETE {{url}}/api/activities/1aa9ae5b-a060-432c-94ad-d31a8139fb4f
Content-Type: application/json

###
# group: Module 10
# @name Get non existant activity
GET {{url}}/api/activities/d51e33de-105b-4549-96d9-8ba2c7b05a30
Content-Type: application/json

###
# group: Module 10
# @name Create Empty Activity
POST {{url}}/api/activities
Content-Type: application/json

{
}

###
# group: Module 10
# @name Edit an Activity missing fields
PUT {{url}}/api/activities/e80c88e7-3823-4bb7-8ecf-a5249e7091d4
Content-Type: application/json

{
  "title": ""
}

###
# group: Module 10
# @name Edit an Activity correct
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(14, 'days').toISOString());
//%}
PUT {{url}}/api/activities/2
Content-Type: application/json

{
	"title": "Test Create Activity updated",
	"description": "Description of the test event",
	"category": "Culture",
	"date": "{{$isoTimestamp}}",
	"city": "London",
	"venue": "Tower of London"
}

###
# group: Module 10
# @name Delete non existent activity
DELETE {{url}}/api/activities/d51e33de-105b-4549-96d9-8ba2c7b05a30
Content-Type: application/json

###
# group: Module 12
# @name Login user JWT
POST {{url}}/api/login
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

###
# group: Module 12
# @name Login user Cookie
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

###
# group: Module 12
# @name Get Activites
GET {{url}}/api/activities

###
# group: Module 12
# @name Get Activity
GET {{url}}/api/activities/11d87864-d2da-4568-8990-9d71e652c20f

###
# group: Module 12
# @name Register user successfull
POST {{url}}/api/account/register
Content-Type: application/json

{
  "email": "jim@test.com",
  "displayName": "James",
  "password": "Pa$$w0rd"
}

###
# group: Module 12
# @name Register user validation error
POST {{url}}/api/account/register
Content-Type: application/json

{
  "email": "sally@test.com",
  "password": "Pa$$w0rd"
}

###
# group: Module 12
# @name Register user duplicate email
POST {{url}}/api/account/register
Content-Type: application/json

{
  "email": "bob@test.com",
  "displayName": "Bob",
  "password": "Pa$$w0rd"
}

###
# group: Module 12
# @name Register user weak password
POST {{url}}/api/account/register
Content-Type: application/json

{
  "email": "letmein@test.com",
  "displayName": "Let Me In",
  "password": "letmein"
}

###
# group: Module 12
# @name Get current user
GET {{url}}/api/account/user-info

###
# group: Module 12
# @name Logout user
POST {{url}}/api/account/logout
Content-Type: application/json

###
# group: Module 14
# @name Login as bob
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 14
# @name Login as tom
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "tom@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 14
# @name Create Activity current user host
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(14, 'days').toISOString());
//%}
POST {{url}}/api/activities
Content-Type: application/json

{
	"title": "Test event with bob as host",
	"description": "Description of the test event",
	"category":"drinks",
	"date": "{{activityDate}}",
	"city": "London",
	"venue": "London venue",
    "latitude": 51.5074,
    "longitude": -0.1278
}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // // response to be 200
    // pm.test("response is ok", function() {
    //     pm.response.to.have.status(200)
    // });
%}

###
# group: Module 14
# @name Get Activities
GET {{url}}/api/activities

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data[0]).to.have.property('id');
    //     pm.expect(data[0]).to.have.property('title');
    //     pm.expect(data[0]).to.have.property('description');
    //     pm.expect(data[0]).to.have.property('date');
    //     pm.expect(data[0]).to.have.property('city');
    //     pm.expect(data[0]).to.have.property('venue');
    //     pm.expect(data[0]).to.have.property('attendees');
    // });
%}

###
# group: Module 14
# @name Get Activity Details
GET {{url}}/api/activities/5a62197b-be97-49f6-acb0-db1135afbe48

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is created", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data).to.have.property('id');
    //     pm.expect(data).to.have.property('title');
    //     pm.expect(data).to.have.property('description');
    //     pm.expect(data).to.have.property('date');
    //     pm.expect(data).to.have.property('city');
    //     pm.expect(data).to.have.property('venue');
    //     pm.expect(data).to.have.property('attendees');
    // });
%}

###
# group: Module 14
# @name Update attendance
POST {{url}}/api/activities/5a62197b-be97-49f6-acb0-db1135afbe48/attend
Content-Type: application/json

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200);
    // });
%}

###
# group: Module 14
# @name Edit an Activity as Bob who is host
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(14, 'days').toISOString());
//%}
PUT {{url}}/api/activities/5a62197b-be97-49f6-acb0-db1135afbe48
Content-Type: application/json

{
    "title": "Editing activity as bob the host",
	"description": "Description of the test event",
	"category": "Culture",
	"date": "{{activityDate}}",
    "city": "London",
    "venue": "London venue",
    "latitude": 51.5074,
    "longitude": -0.1278
}

###
# group: Module 14
# @name Edit an Activity as Tom not host
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(14, 'days').toISOString());
//%}
PUT {{url}}/api/activities/71531714-5ecc-4a51-bd76-440de703a59b
Content-Type: application/json

{
	"title": "Editing activity as tom - not host should fail with 403",
	"description": "Description of the test event",
	"category": "Culture",
	"date": "{{activityDate}}",
	"city": "London",
	"venue": "Tower of London"
}

###
# group: Module 14
# @name Delete activity as Tom not host
DELETE {{url}}/api/activities/2ee2335f-aef3-46cb-85fd-5d123bfca189
Content-Type: application/json
Authorization: Bearer {{tom_token}}

###
# group: Module 14
# @name Delete activity as Bob host
DELETE {{url}}/api/activities/5a62197b-be97-49f6-acb0-db1135afbe48
Content-Type: application/json
Authorization: Bearer {{token}}

###
# group: Module 16
# @name Login as bob
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 16
# @name Login as tom
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "tom@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 16
# @name Add Photo
POST {{url}}/api/profiles/add-photo
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="File"; filename="bat3.jpg"

< /Users/neilc/Desktop/ApiPhotos/bat3.jpg
--WebAppBoundary

###
# group: Module 16
# @name Get current user
GET {{url}}/api/account/user-info

###
# group: Module 16
# @name Get Photos for user
GET {{url}}/api/profiles/f3d8d19c-27cd-4a28-b890-4d888abb8e28/photos

###
# group: Module 16
# @name Delete Photo
DELETE {{url}}/api/profiles/f1bafa9f-4964-4e97-a4ad-5c04c836ae34/photos

###
# group: Module 16
# @name Set Main Photo
PUT {{url}}/api/profiles/6819da2a-f1dd-46af-add9-3f6626504b2a/setMain
Content-Type: application/json

{}

###
# group: Module 16
# @name Get Profile
GET {{url}}/api/profiles/f3d8d19c-27cd-4a28-b890-4d888abb8e28

###
# group: Module 16
# @name Get Profile Tom
GET {{url}}/api/profiles/024f060e-615c-42a5-a8e8-80dc00dd76df

###
# group: Module 18
# @name Login as bob
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 18
# @name Get current user
GET {{url}}/api/account/user-info

###
# group: Module 18
# @name Update User Bio
PUT {{url}}/api/profiles
Content-Type: application/json

{
  "displayName": "Bob",
  "bio": "Hello from Bob!"
}

###
# group: Module 18
# @name Get Profile
GET {{url}}/api/profiles/d3aab827-22df-4014-8e34-4dd7db44695f

###
# group: Module 20
# @name Login as bob
//< {%
    // TODO: you can add here Pre-request handler
//%}
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 20
# @name Login as tom
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "tom@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 20
# @name Get Bob's Profile
GET {{url}}/api/profiles/bob-id

###
# group: Module 20
# @name Get Tom's Profile as Bob
GET {{url}}/api/profiles/tom-id

###
# group: Module 20
# @name Follow tom
POST {{url}}/api/profiles/tom-id/follow

###
# group: Module 20
# @name Get Bob's Followings
GET {{url}}/api/profiles/bob-id/follow-list?
    predicate=followings

###
# group: Module 20
# @name Get Bob's Followers
GET {{url}}/api/profiles/bob-id/follow-list?
    predicate=followers

###
# group: Module 20
# @name Get Tom's Followings
GET {{url}}/api/profiles/tom-id/follow-list?
    predicate=following

###
# group: Module 20
# @name Get Tom's Followers
GET {{url}}/api/profiles/tom-id/follow-list?
    predicate=followers

###
# group: Module 20
# @name Follow bob as tom
POST {{url}}/api/profiles/bob-id/follow

###
# group: Module 21
# @name Login as bob
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: Module 21
# @name Get Activities no queryString
GET {{url}}/api/activities

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
%}

###
# group: Module 21
# @name Get Activities next page
GET {{url}}/api/activities?
    cursor=2025-03-27T00:03:16.594619Z

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
%}

###
# group: Module 21
# @name Get Activities bob is attending
GET {{url}}/api/activities?
    filter=isGoing

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data[0]).to.have.property('id');
    //     pm.expect(data[0]).to.have.property('title');
    //     pm.expect(data[0]).to.have.property('description');
    //     pm.expect(data[0]).to.have.property('date');
    //     pm.expect(data[0]).to.have.property('city');
    //     pm.expect(data[0]).to.have.property('venue');
    //     pm.expect(data[0]).to.have.property('attendees');
    // });
    //
    // pm.test("has pagination header", function() {
    //     pm.response.to.have.header("pagination")
    // })
%}

###
# group: Module 21
# @name Get Activities bob is hosting
GET {{url}}/api/activities?
    filter=isHost

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data[0]).to.have.property('id');
    //     pm.expect(data[0]).to.have.property('title');
    //     pm.expect(data[0]).to.have.property('description');
    //     pm.expect(data[0]).to.have.property('date');
    //     pm.expect(data[0]).to.have.property('city');
    //     pm.expect(data[0]).to.have.property('venue');
    //     pm.expect(data[0]).to.have.property('attendees');
    // });
    //
    // pm.test("has pagination header", function() {
    //     pm.response.to.have.header("pagination")
    // })
%}

###
# group: Module 21
# @name Get Activities starting in 2 months time
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(2, 'months').toISOString());
//%}
GET {{url}}/api/activities?
    startDate={{activityDate}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
%}

###
# group: Module 21
# @name Get Activities starting in 2 months time bob is going to
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(4, 'months').toISOString());
//%}
GET {{url}}/api/activities?
    startDate={{activityDate}}&
    isGoing=true

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data[0]).to.have.property('id');
    //     pm.expect(data[0]).to.have.property('title');
    //     pm.expect(data[0]).to.have.property('description');
    //     pm.expect(data[0]).to.have.property('date');
    //     pm.expect(data[0]).to.have.property('city');
    //     pm.expect(data[0]).to.have.property('venue');
    //     pm.expect(data[0]).to.have.property('attendees');
    // });
    //
    // pm.test("has pagination header", function() {
    //     pm.response.to.have.header("pagination")
    // })
%}

###
# group: Module 21
# @name Get Activities starting 3 months ago
//< {%
    // TODO: migrate to HTTP Client Pre-request handler API
    // var moment = require("moment");
    
    // 
    
    // pm.environment.set('activityDate', moment().add(-3, 'months').toISOString());
//%}
GET {{url}}/api/activities?
    startDate={{activityDate}}&
    isGoing=true

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
%}

###
# group: Module 21
# @name Get Bob's Activities - past
GET {{url}}/api/profiles/bob-id/activities?
    filter=past

###
# group: Module 21
# @name Get Bob's Activities - future
GET {{url}}/api/profiles/bob-id/activities?
    filter=future

###
# group: Module 21
# @name Get Bob's Activities - hosting
GET {{url}}/api/profiles/bob-id/activities?
    filter=hosting

###
# group: IdentityCB
# @name Login as bob
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "bob@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Login as jane
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "jane@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Regsiter new user
POST {{url}}/api/account/register
Content-Type: application/json

{
  "displayName": "test1",
  "email": "test1@test.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Resend verification email
GET {{url}}/api/account/resendConfirmEmail?
    email=jane@test.com
Content-Type: application/json

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Login as demo user
POST {{url}}/api/login?
    useCookies=true
Content-Type: application/json

{
  "email": "demo@trycatchlearn.com",
  "password": "Pa$$w0rd"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Verify User Email address
GET {{url}}/api/confirmEmail?
    userId=0efc6fba-d1a8-485d-9177-ad04352dfe8c&
    code=Q2ZESjhMSFZ5WTFFaDQxRXBGbmJyVlRHUTA0MDBVNjkzN20zZ1g2NTlnbm52cXlwajFmTkRhUHBqS0hCajd4QUp1WjlLWG80Z25RK3BOdlliaUE5VDBkMjB4ZEQ5OGt5QUJzaVhtZkt3YmV6RHJ6cGt5Ym8zSGI5WE9HOS8yWEhScjlHR3pPUG1uYzRPVmtoeFl3REpDdkRUay9xVGtzcjR2anUrVkFBS3Q4V003RCtGcXBGY01LcEdFRi9XT1FNVmZadVkxRnFydzY4d1NTTGtSbzI4Q29nMjB2aGlZVmx2MVpheDFmZ0hKU2hLNkJBaDhwL2w0WlhVajZQaVA4VWZEKytyQT09
Content-Type: application/json

{
  "token": "Q2ZESjhGeHN3VDhjdytWRXNLM0NqaTBpS0FhZEZGUitqN3JpazNDRVduZ3dpSU5PcW1ZMzBxUDRzMW44ek5MRTFuRnJ0RUk3L3oyY01SR2dyTmlXcVd4UHFMRGc4aTd1clB2OHNXZmp4a0w0TXVtdmRNd2ZTVjgvZnVDbHNCRG5jY3FEQUNLM3FBdHo4VlRZek9lU0dBMXduRVZJRlRvYjZTSXdRdXhtT1gwMlp4NjE3L3hwMkhyaGltNlJCZlFTeUNpMzQwRW85bjlFclg1VmNFZjJDSmhnZStjRkxQUmd1ZkVIdG4vRlFhY0EwV1ZzaVlkelBOc0pNV2lMYnVXRUhnUlFvQT09",
  "email": "nru02096@eoopy.com"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Reset password for logged in user
POST {{url}}/api/account/change-password
Content-Type: application/json

{
  "currentPassword": "Pa$$w0rd",
  "newPassword": "Pa$$w0rd1"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Forgot password
POST {{url}}/api/forgotPassword
Content-Type: application/json

{
  "email": "bob@test.com"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Reset Password
POST {{url}}/api/resetPassword
Content-Type: application/json

{
  "resetCode": "Q2ZESjhMNC9Ya1hOQlhWTWpZUUY3bU9yK2IrL1RrSkFOVk5uN2lnTE15d28zU085RUFCdy9WV0p3UzUvdzV2ajFSM1RIM21HV3A3cXNndzhJbmtnOE4rY1pmV2d6SzgvMzRrK2JsZUIzSEFrU1VlVG1yTERwVXhCMlI4RWU2NzNkbmtuaG5EMEpmeElnbFIyb1hVYmwwc0hVTmJ6K2tlVE10SVlRY3RJWGxldWp1cEtjb3E1Y080LzlRTFVTcFZ2Nk1KeWRRPT0",
  "email": "bob@test.com",
  "newPassword": "Pa$$w0rd2"
}

> {%
    // TODO: you can add here Response handler
%}

###
# group: IdentityCB
# @name Get users - admin
GET {{url}}/api/admin/users
Authorization: Bearer {{token}}

###
# group: IdentityCB
# @name Get Facebook Info From Token
GET https://graph.facebook.com/me?
    access_token=EAABdyD00yZBQBAJfwt3BZBb6muRj47C4dtaiO5kTsRWrUT5kEkcmD1lsDnRjhdYFZAfb5m5VDdQ0CNzZAZB9DvbgG4OZAbJFg09qrEwbc7D4usogKc2nqnEEaXyiLgvBuZBrDxDWz4HpwG76FLYaHw46ZB7aaUTZCtlo8BoUVQngh3PT8iCqk1q1wQgiv9XoCuzdcDRrHK6ZA2sIvJuToEBwSn&
    fields=name,email,picture.width(100).height(100)

###
# group: IdentityCB
# @name Verify Facebook  From Token
GET https://graph.facebook.com/debug_token?
    input_token=EAABdyD00yZBQBAJfwt3BZBb6muRj47C4dtaiO5kTsRWrUT5kEkcmD1lsDnRjhdYFZAfb5m5VDdQ0CNzZAZB9DvbgG4OZAbJFg09qrEwbc7D4usogKc2nqnEEaXyiLgvBuZBrDxDWz4HpwG76FLYaHw46ZB7aaUTZCtlo8BoUVQngh3PT8iCqk1q1wQgiv9XoCuzdcDRrHK6ZA2sIvJuToEBwSn&
    access_token=appId|appSecret

###
# group: IdentityCB
# @name Get Activities
GET {{url}}/api/activities
Authorization: Bearer {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var data = pm.response.json();
    //
    // // response to be 200
    // pm.test("response is 200", function() {
    //     pm.response.to.have.status(200)
    // });
    //
    // pm.test("has all properties", function() {
    //     pm.expect(data[0]).to.have.property('id');
    //     pm.expect(data[0]).to.have.property('title');
    //     pm.expect(data[0]).to.have.property('description');
    //     pm.expect(data[0]).to.have.property('date');
    //     pm.expect(data[0]).to.have.property('city');
    //     pm.expect(data[0]).to.have.property('venue');
    //     pm.expect(data[0]).to.have.property('attendees');
    // });
%}